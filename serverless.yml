service: serverless-dash-2022

provider:
  name: aws
  runtime: nodejs16.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SQS:*
      Resource:
        - Fn::GetAtt: [eventQueue, Arn]
    - Effect: Allow
      Action:
        - SNS:*
      Resource:
        - !Ref eventTopic
    - Effect: Allow

custom:
  datadog:
    apiKey: ${env:DD_API_KEY}
    captureLambdaPayload: true

  soloTopicName: ${self:service}-${opt:stage, "dev"}-event-topic
  queueName: $[self:service}-${opt:stage, "dev"}-event-queue

functions:
  webhook:
    handler: handler.webhook
    environment:
      SQS_QUEUE: !Ref eventQueue
    events:
      - httpApi:
          path: /receiveWebhook
          method: post
  processor:
    handler: handler.processor
    events:
      - sqs:
          arn: { "Fn::GetAtt": [eventQueue, Arn] }
          batchSize: 1
resources:
  Resources:
    eventQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.queueName}
    eventTopic:
      Type: AWS::SNS::Topic
      Properties:
        # Subscribes the SQS queue to the SNS topic
        Subscription:
          - Protocol: sqs
            Endpoint: !GetAtt eventQueue.Arn

    SnsToSqsPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Sid: "Allow SNS publish to SQS"
              Effect: Allow
              Principal:
                Service: "sns.amazonaws.com"
              Resource: !GetAtt eventQueue.Arn
              Action: SQS:SendMessage
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref eventTopic
        Queues:
          - Ref: eventQueue
